{"version":3,"sources":["components/Image/Image.js","components/Carousel/Carousel.js","components/CarouselSettings/CarouselSettings.js","App.js","index.js"],"names":["Image","image","index","itemWidth","style","width","src","alt","Carousel","state","nextButton","newIndex","props","step","images","frameSize","infinite","length","setState","prevButton","this","animationDuration","className","transform","transition","map","i","key","type","onClick","Component","CarouselSettings","onChangeItemWidth","onchangeFrameSize","onChangeStep","onChangeAnimationDuration","onChangeFinite","htmlFor","id","onChange","value","min","max","name","placeholder","PureComponent","App","changeFrameSize","evt","preventDefault","target","changeStep","changeItemWidth","changeAnimationDuration","changeFinite","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d06dd3e6.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Image = ({ image, index, itemWidth }) => (\n  <img\n    style={{ width: `${itemWidth}px` }}\n    src={image}\n    alt={index + 1}\n  />\n);\n\nImage.propTypes = {\n  image: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n};\n\nexport default Image;\n","import React, { Component } from 'react';\nimport './Carousel.scss';\nimport PropTypes from 'prop-types';\nimport Image from '../Image/Image';\n\nexport default class Carousel extends Component {\n  state = {\n    index: 0,\n  }\n\n  nextButton = () => {\n    let newIndex;\n    const { step, images, frameSize, infinite } = this.props;\n    const { index } = this.state;\n\n    if (infinite) {\n      if (index + frameSize === images.length) {\n        newIndex = 0;\n      } else if (index + frameSize > images.length - step) {\n        newIndex = images.length - frameSize;\n      } else {\n        newIndex = index + step;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    } else {\n      if (index + frameSize > images.length - step) {\n        newIndex = images.length - frameSize;\n      } else {\n        newIndex = step + index;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    }\n  }\n\n  prevButton = () => {\n    let newIndex;\n    const { step, images, frameSize, infinite } = this.props;\n    const { index } = this.state;\n\n    if (infinite) {\n      if (index === 0) {\n        newIndex = images.length - frameSize;\n      } else if (index < step) {\n        newIndex = 0;\n      } else {\n        newIndex = index - step;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    } else {\n      if (index === 0 || index < step) {\n        newIndex = 0;\n      } else {\n        newIndex = index - step;\n      }\n\n      this.setState(() => ({\n        index: newIndex,\n      }));\n    }\n  }\n\n  render() {\n    const {\n      images,\n      animationDuration,\n      frameSize,\n      itemWidth,\n    } = this.props;\n    const { index } = this.state;\n\n    return (\n      <>\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${itemWidth * frameSize}px`,\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(-${index * itemWidth}px)`,\n              transition: `transform ${animationDuration}ms ease-in-out`,\n            }}\n          >\n            {images.map((image, i) => (\n              <li key={image}>\n                <Image itemWidth={itemWidth} image={image} index={i} />\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"button__container\">\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.prevButton}\n          >\n            Prev\n          </button>\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.nextButton}\n          >\n            Next\n          </button>\n        </div>\n      </>\n    );\n  }\n}\n\nCarousel.propTypes = {\n  step: PropTypes.number.isRequired,\n  images: PropTypes.arrayOf.isRequired,\n  itemWidth: PropTypes.number.isRequired,\n  infinite: PropTypes.bool.isRequired,\n  frameSize: PropTypes.number.isRequired,\n  animationDuration: PropTypes.number.isRequired,\n};\n","import React, { PureComponent } from 'react';\nimport './CarouselSettings.scss';\nimport PropTypes from 'prop-types';\n\nexport default class CarouselSettings extends PureComponent {\n  render() {\n    const {\n      images,\n      onChangeItemWidth,\n      itemWidth,\n      onchangeFrameSize,\n      onChangeStep,\n      onChangeAnimationDuration,\n      onChangeFinite,\n    } = this.props;\n\n    return (\n      <form className=\"form\">\n        <label htmlFor=\"frameSize\">Frame Size</label>\n        <select\n          className=\"form__select\"\n          id=\"frameSize\"\n          onChange={onchangeFrameSize}\n        >\n          {images.map((image, i) => (\n            <option key={image} value={i + 1}>{i + 1}</option>\n          ))}\n        </select>\n\n        <label htmlFor=\"itemWidth\">Item Width</label>\n        <input\n          type=\"range\"\n          min=\"50\"\n          max=\"300\"\n          step=\"10\"\n          value={itemWidth}\n          onChange={onChangeItemWidth}\n        />\n\n        <label htmlFor=\"step\">Step</label>\n        <select\n          className=\"form__select\"\n          id=\"step\"\n          onChange={onChangeStep}\n        >\n          {images.map((image, i) => (\n            <option key={image} value={i + 1}>{i + 1}</option>\n          ))}\n        </select>\n\n        <label htmlFor=\"duration\">Animation Duration</label>\n        <input\n          type=\"number\"\n          className=\"form__input\"\n          name=\"duration\"\n          id=\"duration\"\n          onChange={onChangeAnimationDuration}\n          placeholder=\"1000\"\n        />\n\n        <label htmlFor=\"infinite\">Infinite</label>\n        <input\n          type=\"checkbox\"\n          className=\"form__input\"\n          name=\"infinite\"\n          id=\"infinite\"\n          onChange={onChangeFinite}\n        />\n      </form>\n    );\n  }\n}\n\nCarouselSettings.propTypes = {\n  images: PropTypes.arrayOf.isRequired,\n  onChangeItemWidth: PropTypes.func.isRequired,\n  itemWidth: PropTypes.func.isRequired,\n  onchangeFrameSize: PropTypes.func.isRequired,\n  onChangeStep: PropTypes.func.isRequired,\n  onChangeAnimationDuration: PropTypes.func.isRequired,\n  onChangeFinite: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\n\nimport Carousel from './components/Carousel/Carousel';\nimport CarouselSettings from './components/CarouselSettings/CarouselSettings';\n\nexport default class App extends Component {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 1,\n    step: 1,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  changeFrameSize = (evt) => {\n    evt.preventDefault();\n\n    this.setState({\n      frameSize: +evt.target.value,\n    });\n  }\n\n  changeStep = (evt) => {\n    evt.preventDefault();\n\n    this.setState({\n      step: +evt.target.value,\n    });\n  }\n\n  changeItemWidth = (evt) => {\n    evt.preventDefault();\n\n    this.setState({\n      itemWidth: +evt.target.value,\n    });\n  }\n\n  changeAnimationDuration = (evt) => {\n    evt.preventDefault();\n\n    this.setState({\n      animationDuration: +evt.target.value,\n    });\n  }\n\n  changeFinite = (evt) => {\n    this.setState({\n      infinite: evt.target.checked,\n    });\n  }\n\n  render() {\n    const { images } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"App__header\">\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={this.state.images}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          step={this.state.step}\n          animationDuration={this.state.animationDuration}\n          infinite={this.state.infinite}\n        />\n\n        <CarouselSettings\n          images={this.state.images}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          onchangeFrameSize={evt => this.changeFrameSize(evt)}\n          onChangeStep={evt => this.changeStep(evt)}\n          onChangeItemWidth={evt => this.changeItemWidth(evt)}\n          onChangeAnimationDuration={evt => this.changeAnimationDuration(evt)}\n          onChangeFinite={evt => this.changeFinite(evt)}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}